{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cl\\xE9ment\\\\Downloads\\\\myresto_react-feature-menu\\\\src\\\\pages\\\\users\\\\Login.js\";\nimport React from 'react';\n// import { Link, Navigate, useNavigate, useLocation } from 'react-router-dom';\n// import axiosProvider from '../../core/axios';\nimport { motion } from 'framer-motion';\n\n// const LOGIN_URL = 'user/login/';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  // const userRef = useRef();\n  // const errRef = useRef();\n  // const navigate = useNavigate()\n  // const location = useLocation()\n\n  // const [user, setUser] = useState('');\n  // const [pwd, setPwd] = useState('');\n  // const [errMsg, setErrMsg] = useState('');\n  // const [success, setSucces] = useState(false);\n\n  // useEffect(() => {\n  //     userRef.current.focus();\n  // }, [])\n\n  // useEffect(() => {\n  //     setErrMsg('')\n  // }, [user, pwd])\n\n  // const handleSubmit = async (e) => {\n  //     e.preventDefault();\n\n  //     try {\n  //         const response = await axiosProvider.post(LOGIN_URL,\n  //             JSON.stringify({\n  //                 email: user,\n  //                 password: pwd\n  //             }),{\n  //                 xsrfHeaderName: 'X-CSRFTOKEN',\n  //                 xsrfCookieName: 'csrftoken',\n  //             })\n  //         localStorage.setItem(\"access_token\", response.data.access)\n  //         localStorage.setItem(\"refresh_token\", response.data.refresh)\n  //         axiosProvider.defaults.headers['Authorization'] = 'JWT ' + localStorage.getItem(\"access_token\")\n\n  //         setUser('')\n  //         setPwd('')\n  //         setSucces(true);\n  //         navigate('/', {state:{prevUrl: location.pathname}})\n  //     } catch (err) {\n  //         if (!err?.response) {\n  //             setErrMsg('No Server Response')\n  //         } else if (err.response?.status === 400) {\n  //             setErrMsg('Missing username or Password');\n  //         } else if (err.response?.status === 401) {\n  //             setErrMsg('Unauthorized')\n  //         } else {\n  //             setErrMsg('Login Failed')\n  //         }\n  //         errRef.current.focus();\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"container-log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","motion","Login"],"sources":["C:/Users/ClÃ©ment/Downloads/myresto_react-feature-menu/src/pages/users/Login.js"],"sourcesContent":["import React from 'react'\n// import { Link, Navigate, useNavigate, useLocation } from 'react-router-dom';\n// import axiosProvider from '../../core/axios';\nimport { motion } from 'framer-motion';\n\n// const LOGIN_URL = 'user/login/';\n\nconst Login = () => {\n    // const userRef = useRef();\n    // const errRef = useRef();\n    // const navigate = useNavigate()\n    // const location = useLocation()\n\n    // const [user, setUser] = useState('');\n    // const [pwd, setPwd] = useState('');\n    // const [errMsg, setErrMsg] = useState('');\n    // const [success, setSucces] = useState(false);\n\n    // useEffect(() => {\n    //     userRef.current.focus();\n    // }, [])\n\n    // useEffect(() => {\n    //     setErrMsg('')\n    // }, [user, pwd])\n\n    // const handleSubmit = async (e) => {\n    //     e.preventDefault();\n\n    //     try {\n    //         const response = await axiosProvider.post(LOGIN_URL,\n    //             JSON.stringify({\n    //                 email: user,\n    //                 password: pwd\n    //             }),{\n    //                 xsrfHeaderName: 'X-CSRFTOKEN',\n    //                 xsrfCookieName: 'csrftoken',\n    //             })\n    //         localStorage.setItem(\"access_token\", response.data.access)\n    //         localStorage.setItem(\"refresh_token\", response.data.refresh)\n    //         axiosProvider.defaults.headers['Authorization'] = 'JWT ' + localStorage.getItem(\"access_token\")\n\n    //         setUser('')\n    //         setPwd('')\n    //         setSucces(true);\n    //         navigate('/', {state:{prevUrl: location.pathname}})\n    //     } catch (err) {\n    //         if (!err?.response) {\n    //             setErrMsg('No Server Response')\n    //         } else if (err.response?.status === 400) {\n    //             setErrMsg('Missing username or Password');\n    //         } else if (err.response?.status === 401) {\n    //             setErrMsg('Unauthorized')\n    //         } else {\n    //             setErrMsg('Login Failed')\n    //         }\n    //         errRef.current.focus();\n    //     }\n    // }\n\n    return (\n        <>\n            <motion.div className='container-log'>\n                \n            </motion.div>\n        </>\n    )\n}\n\nexport default Login"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;AACA,SAASC,MAAM,QAAQ,eAAe;;AAEtC;AAAA;AAAA;AAEA,MAAMC,KAAK,GAAG,MAAM;EAChB;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACI;IAAA,uBACI,QAAC,MAAM,CAAC,GAAG;MAAC,SAAS,EAAC;IAAe;MAAA;MAAA;MAAA;IAAA;EAExB,iBACd;AAEX,CAAC;AAAA,KA5DKA,KAAK;AA8DX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}